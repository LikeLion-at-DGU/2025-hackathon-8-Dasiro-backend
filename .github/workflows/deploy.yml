name: Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      # .env 파일 생성 (Kakao + S3 키까지 추가했음 +9.22 EMAIL 추가)
      - name: Create .env for CI
        run: |
          echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" > .env
          echo "DEBUG=${{ secrets.DEBUG || 'False' }}" >> .env
          echo "KAKAO_REST_KEY=${{ secrets.KAKAO_REST_KEY }}" >> .env
          echo "KAKAO_API_BASE=https://apis-navi.kakaomobility.com" >> .env
          echo "KAKAO_LOCAL_BASE=https://dapi.kakao.com" >> .env
          echo "KAKAO_TIMEOUT=8" >> .env
          echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> .env
          echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> .env
          echo "AWS_STORAGE_BUCKET_NAME=${{ secrets.AWS_STORAGE_BUCKET_NAME }}" >> .env
          echo "AWS_S3_REGION_NAME=${{ secrets.AWS_S3_REGION_NAME }}" >> .env
          echo "EMAIL_HOST_USER=${{ secrets.EMAIL_HOST_USER }}" >> .env
          echo "EMAIL_HOST_PASSWORD=${{ secrets.EMAIL_HOST_PASSWORD }}" >> .env

      - name: Install dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install -r requirements.txt

      - name: Django system check
        run: |
          source venv/bin/activate
          python manage.py check

      - name: Check for unapplied model changes
        run: |
          source venv/bin/activate
          python manage.py makemigrations --check --dry-run

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy to EC2 via SSH (zero-downtime reload)
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script_stop: true
          script: |
            set -e
            PROJECT_DIR=/home/ubuntu/2025-hackathon-8-Dasiro-backend
            cd $PROJECT_DIR
            git fetch --all
            git reset --hard origin/main
            source venv/bin/activate
            pip install -U pip
            pip install -r requirements.txt
            python manage.py migrate --noinput || true
            python manage.py collectstatic --noinput || true
            sudo systemctl reload gunicorn
            sudo systemctl status gunicorn --no-pager || true
